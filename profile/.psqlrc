-- https://www.postgresql.org/docs/current/static/app-psql.html

\set QUIET on

\set AUTOCOMMIT on
\set COMP_KEYWORD_CASE upper
\set ECHO_HIDDEN off
\set HISTCONTROL ignoreboth
\set HISTFILE ~/.local/share/psql/history/:DBNAME
\set HISTSIZE 2000

\if :{?REAL_HOST}
    \set PROMPT_HOST :REAL_HOST
\elif `if [ ":HOST" = "/var/run/postgresql" ]; then echo "true"; else echo "false"; fi`
    \set PROMPT_HOST `hostname`
\else
    \set PROMPT_HOST :HOST
\endif

\set PROMPT1 '[pg://%x%[%033[1;31m%]%n%[%033[0;31m%]@%[%033[1;31m%]%:PROMPT_HOST:%[%033[0;31m%]/%[%033[0;37m%]%/]%[%033[1;33m%]%#%[%033[0m%] '

\unset PROMPT2

\pset border 2
\pset expanded auto
\pset null NULL
\pset pager always
\pset format wrapped
\x auto

\setenv PAGER less
\setenv LESS '--no-init --raw-control-chars --ignore-case --quit-on-intr --squeeze-blank-lines --quit-if-one-screen'

\timing on
\encoding unicode

-- requires for windows to make colored prompt works
\! true

\set QUIET off

\echo 'Server:'
\echo '\t:uptime\t\t-- server uptime'
\echo '\t:sp\t\t-- current search path'
\echo '\t:datadir\t-- show current path to the data directory'
\echo '\t:reload\t\t-- reload server config'
\echo '\t:settings\t-- server settings'
\echo '\t:conn\t\t-- server connections'
\echo '\t:dbsize\t\t-- database size'
\echo '\t:activity\t-- server activity'
\echo '\t:hit\t\t-- hit / read ratio, larger value is better, https://habrahabr.ru/post/13992/'
\echo '\t:activity1\t-- current queries with duration, https://habrahabr.ru/post/13992/'
\echo '\t:locks\t\t-- lock info'
\echo '\t:locks1\t\t-- current locks list, https://habrahabr.ru/post/13992/'
\echo '\t:waits\t\t-- waiting queries'

\echo '\nDatabase:'
\echo '\t:tabsize\t-- tables size'
\echo '\t:tabmod\t\t-- tables modifications, https://habrahabr.ru/post/13992/'
\echo '\t:scanratio\t-- sequential / index scan ratio, https://habrahabr.ru/post/13992/'
\echo '\t:idxratio\t-- index usage ratio, https://habrahabr.ru/post/13992/'
\echo '\t:uselesscol\t-- useless columns, https://wiki.postgresql.org/wiki/Finding_useless_columns'

\echo '\nOther:'
\echo '\t:ll\t\t-- list'

\echo '\n\t:m\t\t-- help menu'
\echo '\t\\h\t\t-- help with SQL commands'
\echo '\t\\?\t\t-- help with psql commands\n'

-- SERVER
\set uptime 'SELECT NOW() - pg_postmaster_start_time() AS "uptime";'
\set sp 'SHOW search_path;'
\set datadir 'SHOW data_directory;'
\set reload 'SELECT pg_reload_conf();'
\set settings 'SELECT "name", "setting", "unit", "context" FROM "pg_settings";'
\set conn 'SELECT "usename", COUNT(*) FROM "pg_stat_activity" GROUP BY "usename";'
\set dbsize 'SELECT "datname", pg_size_pretty(pg_database_size("datname")) "db_size" FROM "pg_database" ORDER BY "db_size";'

\set activity 'SELECT "datname", "pid", "usename", "application_name", "client_addr", "client_hostname", "client_port", "query", "state" FROM "pg_stat_activity";'

\set hit 'SELECT "datname", CASE WHEN "blks_read" = 0 THEN 0 ELSE "blks_hit" / "blks_read" END AS "ratio" FROM "pg_stat_database";'

\set activity1 'SELECT "datname", NOW() - "query_start" AS "duration", "pid", "query" FROM "pg_stat_activity" WHERE "datname" IS NOT NULL ORDER BY "duration" DESC;'

\set locks 'SELECT "bl"."pid" AS "blocked_pid", "a"."usename" AS "blocked_user", "kl"."pid" AS "blocking_pid", "ka"."usename" AS "blocking_user", "a"."query" AS "blocked_statement" FROM "pg_catalog"."pg_locks" AS "bl" JOIN "pg_catalog"."pg_stat_activity" AS "a" ON "bl"."pid" = "a"."pid" JOIN "pg_catalog"."pg_locks" AS "kl" JOIN "pg_catalog"."pg_stat_activity" AS "ka" ON "kl"."pid" = "ka"."pid" ON "bl"."transactionid" = "kl"."transactionid" AND "bl"."pid" != "kl"."pid" WHERE NOT "bl"."granted";'

\set locks1 'SELECT "l"."mode", "d"."datname", "c"."relname", "l"."granted", "l"."transactionid" FROM "pg_locks" AS "l" LEFT JOIN "pg_database" AS "d" ON "l"."database" = "d"."oid" LEFT JOIN "pg_class" AS "c" ON "l"."relation" = "c"."oid";'

-- TODO not works
\set waits 'SELECT pg_stat_activity.pid, pg_stat_activity.query, pg_stat_activity.waiting, now() - pg_stat_activity.query_start AS \"totaltime\", pg_stat_activity.backend_start FROM pg_stat_activity WHERE pg_stat_activity.query !~ \'%IDLE%\'::text AND pg_stat_activity.waiting = true;'

-- DATABASE
\set tabsize 'SELECT "nspname" || \'.\' || "relname" AS "relation", pg_size_pretty(pg_relation_size("C"."oid")) AS "size" FROM "pg_class" AS "C" LEFT JOIN "pg_namespace" AS "N" ON ("N"."oid" = "C"."relnamespace") WHERE "nspname" NOT IN (\'pg_catalog\', \'information_schema\') ORDER BY pg_relation_size("C"."oid") DESC LIMIT 40;'

\set tabmod 'SELECT "relname", "n_tup_ins" AS "rows added", "n_tup_upd" AS "rows updated", "n_tup_del" AS "rows inserted" FROM "pg_stat_user_tables" ORDER BY "n_tup_upd" DESC;'

\set scanratio 'SELECT "relname", "seq_scan", "idx_scan", CASE WHEN "idx_scan" = 0 THEN 100 ELSE "seq_scan" / "idx_scan" END AS "ratio" FROM "pg_stat_user_tables" ORDER BY "ratio" DESC;'

\set idxratio 'SELECT "indexrelname", "idx_tup_read", "idx_tup_fetch", CASE WHEN "idx_tup_fetch" = 0 THEN 100 ELSE "idx_tup_read" / "idx_tup_fetch" END AS "ratio" FROM "pg_stat_user_indexes" ORDER BY "ratio" DESC;'

\set uselesscol 'SELECT "nspname", "relname", "attname", "typname", ("stanullfrac" * 100)::INT AS "null_percent", CASE WHEN "stadistinct" >= 0 THEN "stadistinct" ELSE abs("stadistinct") * "reltuples" END AS "distinct", CASE 1 WHEN "stakind1" THEN "stavalues1" WHEN "stakind2" THEN "stavalues2" END AS "values" FROM "pg_class" AS "c" JOIN "pg_namespace" AS "ns" ON ("ns"."oid" = "relnamespace") JOIN "pg_attribute" ON ("c"."oid" = "attrelid") JOIN "pg_type" AS "t" ON ("t"."oid" = "atttypid") JOIN "pg_statistic" ON ("c"."oid" = "starelid" AND "staattnum" = "attnum") WHERE "nspname" NOT LIKE E\'pg\\_%\' AND "nspname" != \'information_schema\' AND "relkind" = \'r\' AND NOT "attisdropped" AND "attstattarget" != 0 AND "reltuples" >= 100 AND "stadistinct" BETWEEN 0 AND 1 ORDER BY "nspname", "relname", "attname";'

-- OTHER
\set ll '\\! ls -lrt;'
\set m '\\i ~/.psqlrc'
